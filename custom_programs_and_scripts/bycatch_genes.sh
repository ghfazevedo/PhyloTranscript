#!/bin/bash
version=0.1
# Version Log
# v0.2 added a working directory variable so it can be run in any directory.

print_message () {
  echo '
###################################
bycatch_genes '$version'

Created by Guilherme Azevedo 2022 
###################################

This program searches for bycatcth genes on fastq read files. It runs "bwa mem" for mapping and "samtools consensus" to get the fasta files from bam files.
You only need to specify the folder with clean reads (structured as in the output generated by the phyluce workflow) and the fasta file with the interest genes (e.g. mitochondrial genes and/or the usual suspects 18SrRNA 28SrRNA).

You need to specify the environments where bwa and samtools v 1.15.1 are installed. Since I usually uses the bwa installed with phyluce, and the version of samtools is incompatible with the version of phylluce, I have the both programs in different environts. 

Usage:

bycatch_genes.sh -R CleanReadsFolder -O OutputPrefix -C ReferenceFasta -b bwaCondaEnv -s SamtoolsCondaEnv [-h] [... OTHER_OPTIONAL_ARGUMENTS] 

      -R  CleanReadsFolder            The folder with the clean reads (trimmomatic output)
      -O  OutputPrefix                The name of the folder in whcih the final assemblies will be saved
      -C  ReferenceFasta              The folder with fasta file with target genes to be used as reference for mapping.
      -b  bwaCondaEnvironment         The conda environment with bwa installed
      -s  SamtoolsCondaEnv            The conda environment with samtools installed
      -n  n_cores                     Number of cores. Default: 1
      -j  n_jobs                      Number of jobs to run in parallel. Default: +0 (=number of availiable cores)
      -h  help



'
exit
}



#path to the clean reads (relative or absolute)
cleanreads=""


#path to reference_fasta
reference_fasta=""


#choose output prefix
outputprefix=""

#number of cores
n_cores=1

#number of jobs for parallel
n_jobs=+0

#chose conda enviroment
bwaCondaEnv="phyluce-1.7.1"
SamtoolsCondaEnv="base"

# Set working directory
workingdirectory=$(pwd)

while getopts "R:O:C:b:s:n:j:h" flag; do
    case "${flag}" in
            R)  cleanreads=${OPTARG};;
            O)  outputprefix=${OPTARG};;
            C)  reference_fasta=${OPTARG};;
            b)  bwaCondaEnv=${OPTARG};;
            s)  SamtoolsCondaEnv=${OPTARG};;
            n)  n_cores=${OPTARG};;
		    j)  n_jobs=${OPTARG};;
            h)  print_message;;
            ?)  print_message;;
    esac
done

if [ "$cleanreads" == "" ]
  then
     echo "Folder with clean reads file needs to be specified with the flag -R"
     echo
     print_message
     exit
  else
     echo "Clean reads folder "$cleanreads""
fi


if [ "$reference_fasta" == "" ]
  then
     echo "reference_fasta folder name needs to be specified wit flag -C"
     echo
     print_message
     exit
  else
     echo "reference_fasta folder "$reference_fasta""
fi

if [ "$bwaCondaEnv" == "" ]
  then
     echo "Conda environment for bwa not specified. Using phyluce-1.7.1"
  else
     source activate base
     conda activate $bwaCondaEnv
fi

if [ "$SamtoolsCondaEnv" == "" ]
  then
     echo "Conda environment for Samtools not specified. Using base."
  else
     echo "Samtools environment $SamtoolsCondaEnv"
fi


if [ "$outputprefix" == "" ]
  then
     outputprefix=$reference_fasta
     [ -d $outputprefix"_bam" ] && echo "A folder with mapped output already exists in the output directory" && exit
    
  else
     [ -d $outputprefix"_bam" ] && echo "A folder with mapped output already exists in the output directory" && exit

fi

mkdir -p logs
logs_path=$(realpath logs)

cleanreadspath=$(realpath $cleanreads)

reference_fasta_path=$(realpath $reference_fasta)

echo '
###################################
bycatch_genes '$version'

Created by Guilherme Azevedo 2022 
###################################

This program searches for bycatcth genes on fastq read files. It runs phyluce workflow for mapping and samtools consensus to get the fasta files from bam files.

Please cite SAMTOOLS and Phyluce

----------------------------------------------------------------------
'$(date)'

Start retrieving bycatch.

' | tee -a $logs_path/progress.txt


### Index reference

echo 'Indexing' | tee -a $logs_path/progress.txt

bwa index $reference_fasta_path

echo 'Start mapping' | tee -a $logs_path/progress.txt

mkdir $outputprefix"_bam"

for folder in $cleanreadspath/*
  do
    #name=$(basename $folder)
    sem --id bwajob --jobs $n_jobs bwa mem -B 2 -t $n_cores $reference_fasta_path $folder/split-adapter-quality-trimmed/$(basename $folder)"-READ1.fastq.gz" $folder/split-adapter-quality-trimmed/$(basename $folder)"-READ2.fastq.gz" | samtools sort -@ $n_cores -o $outputprefix"_bam"/$(basename $folder)".bam"
  done
sem --wait --id bwajob

#getting fasta from bams
echo 'Getting fasta from bams' | tee -a $logs_path/progress.txt

conda activate $SamtoolsCondaEnv

get_fasta_from_bam () {
    mkdir $outputprefix"_fastas_by_species"
    mkdir $outputprefix"_fastas_by_gene"

    for bamfile in $outputprefix"_bam"/*.bam
      do
         name=$(basename $bamfile .bam)
         samtools consensus -@ $n_cores -o $outputprefix"_fastas_by_species"/$name".fasta"  $bamfile
    done

    for fastafile in $outputprefix"_fastas_by_species"/*.fasta
      do
        species_name=$(basename $fastafile .fasta)
        seq_headers=$(grep ">" $fastafile)
        for header in $seq_headers
          do
            gene_name=$(echo $header | cut -f2 -d">" )
            sed '$a>' $fastafile | sed -n "/$header/,/>/p" | head -n -1 | sed "s/$header/>$species_name |$gene_name/g"  >> $outputprefix"_fastas_by_gene"/$gene_name".fasta"
        done
    done
}

get_fasta_from_bam


echo 'Finished bycatch.

'$(date)'
----------------------------------------------------------------------
######################################################################

' | tee -a $logs_path/progress.txt








